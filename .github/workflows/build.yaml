name: build

on:
  workflow_call:
    inputs:
      image_name:
        description: 'Image name (e.g. my-image)'
        required: true
        type: string
      go_version:
        description: 'Go version to use'
        required: false
        type: string
        default: '1.20.3'
    outputs:
      digest:
        value: ${{ jobs.build.outputs.digest }}

permissions:
  contents: read

jobs:
  build:
    outputs:
      digest: ${{ steps.image.outputs.digest }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:

    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        egress-policy: audit

    - name: Setup Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: '${{ inputs.go_version }}'

    - run: go version

    - name: Cache Go Modules
      uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Checkout Code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

    - name: Tidy Modules
      run: |
        go mod tidy
        go mod vendor

    - name: Get Version
      run: |
        set -euo pipefail
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Install ko
      uses: ko-build/setup-ko@3aebd0597dc1e9d1a26bcfdb7cbeb19c131d3037 # v0.7

    - name: Authenticate ko
      run: |
        ko login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

    # Note: ko build image ref will include BOTH, the tag AND digest of the image.
    - name: Build Image
      id: image
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        KO_DOCKER_REPO: ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}
        GOFLAGS: "-ldflags=-X=main.version=${{ env.RELEASE_VERSION }}"
        COSIGN_EXPERIMENTAL: "true"
      run: |
        set -euo pipefail
        ko build internal/cmd/main.go \
          --image-refs .digest \
          --bare \
          --tags ${{ env.RELEASE_VERSION }} \
          --tags ${{ github.sha }} \
          --tags latest

        echo "digest=$(cat .digest)" >> "$GITHUB_OUTPUT"
